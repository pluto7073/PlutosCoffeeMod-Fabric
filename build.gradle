plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

sourceSets {
	main {
		resources {
			srcDir("src/generated/resources")
			exclude(".cache")
		}
	}
}

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.architectury.dev/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://pluto-mod-maven.web.app/maven" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://maven.quiltmc.org/repository/release" }
	maven { url "https://maven.nucleoid.xyz/" }
}

loom {

	accessWidenerPath = file("src/main/resources/plutoscoffee.accesswidener")

	runs {
		configureEach {
			vmArg "-XX:+AllowEnhancedClassRedefinition"
			vmArg "-XX:+IgnoreUnrecognizedVMOptions"
		}

		server {
			runDir "run/server"
		}

		datagen {
			client()

			name "Minecraft Datagen"

			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
			vmArg "-Dfabric-api.datagen.modid=plutoscoffee"
			vmArg "-Dporting_lib.datagen.existing_resources=${file("src/main/resources")}"
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		it.mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2"
		//it.parchment "org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip"
		it.officialMojangMappings { nameSyntheticMembers = false }
	})
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"

	modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"

	modImplementation "ml.pluto7073:pdapi:${project.minecraft_version}+${project.pdapi_version}"

	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	modApi "dev.architectury:architectury-fabric:$architectury_version" // For REI
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}